From: Leopold Palomo-Avellaneda <leopold.palomo@upc.edu>
Date: Tue, 27 Oct 2015 17:25:42 +0100
Subject: Added CMakeList project to build

---
 CMakeLists.txt | 67 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 67 insertions(+)
 create mode 100644 CMakeLists.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..4aa0360
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,67 @@
+#########################################################################
+# CMakeLists.txt file for building  reflexxes with CMake                #
+# Copyright (c) 2015                                                    
+# Leopold Palomo-Avellaneda <leopold.palomo@upc.edu>
+#########################################################################
+
+project(REFLEXXES)
+cmake_minimum_required(VERSION 2.6)
+
+set(REFLEXXES_VERSION_MAJOR 1)
+set(REFLEXXES_VERSION_MINOR 2)
+set(REFLEXXES_VERSION_PATCH 6)
+
+include_directories(include)
+include(GNUInstallDirs)
+
+file( GLOB REFLEXXES_INCLUDES ${PROJECT_SOURCE_DIR}/include/*.h )
+file( GLOB REFLEXXES_SRC ${PROJECT_SOURCE_DIR}/src/TypeIIRML/*.cpp )
+
+add_library(Reflexxes SHARED ${REFLEXXES_SRC})
+set_target_properties( Reflexxes PROPERTIES
+  VERSION
+"${REFLEXXES_VERSION_MAJOR}.${REFLEXXES_VERSION_MINOR}.${REFLEXXES_VERSION_PATCH}"
+  SOVERSION "${REFLEXXES_VERSION_MAJOR}"
+  OUTPUT_NAME ReflexxesTypeII
+# Set accumulated compilation flags: (.so and .a)
+  LINK_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}"
+  INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
+  CLEAN_DIRECT_OUTPUT 1)
+
+add_executable(01_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/01_RMLPositionSampleApplication.cpp)
+target_link_libraries(01_RMLPositionSampleApplications Reflexxes)
+
+add_executable(02_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/02_RMLPositionSampleApplication.cpp)
+target_link_libraries(02_RMLPositionSampleApplications Reflexxes)
+
+add_executable(03_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/03_RMLPositionSampleApplication.cpp)
+target_link_libraries(03_RMLPositionSampleApplications Reflexxes)
+
+add_executable(07_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/07_RMLPositionSampleApplication.cpp)
+target_link_libraries(07_RMLPositionSampleApplications Reflexxes)
+
+add_executable(04_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(04_RMLVelocitySampleApplication Reflexxes)
+
+add_executable(05_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(05_RMLVelocitySampleApplication Reflexxes)
+
+add_executable(06_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(06_RMLVelocitySampleApplication Reflexxes)
+
+add_executable(08_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(08_RMLVelocitySampleApplication Reflexxes)
+
+
+install(FILES ${REFLEXXES_INCLUDES} DESTINATION include/RML)
+install(TARGETS Reflexxes DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT Reflexxes)
+
+
