From: Leopold Palomo-Avellaneda <leopold.palomo@upc.edu>
Date: Mon, 16 Nov 2015 16:30:04 +0100
Subject: Patch to add CMakeLists

---
 CMakeLists.txt | 115 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 115 insertions(+)
 create mode 100644 CMakeLists.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..e184852
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,115 @@
+#########################################################################
+# CMakeLists.txt file for building Reflexxes Motion Library		#
+# with CMake                						#
+# Copyright (c) 2015                                                    #
+# Leopold Palomo-Avellaneda <leopold.palomo@upc.edu>                    #
+#########################################################################
+
+project(Reflexxes)
+cmake_minimum_required(VERSION 2.8.8)
+
+set(RML_VERSION_MAJOR 1)
+set(RML_VERSION_MINOR 2)
+set(RML_VERSION_PATCH 6)
+set(RML_VERSION ${RML_VERSION_MAJOR}.${RML_VERSION_MINOR}.${RML_VERSION_PATCH})
+
+include_directories(${PROJECT_SOURCE_DIR}/include)
+include(GNUInstallDirs)
+include(CMakePackageConfigHelpers)
+
+set(RML_DIRNAME_lib ${CMAKE_INSTALL_LIBDIR})
+set(RML_DIRNAME_include "${CMAKE_INSTALL_PREFIX}/include/RML")
+
+file( GLOB RML_INCLUDES ${PROJECT_SOURCE_DIR}/include/*.h )
+file( GLOB RML_SRC ${PROJECT_SOURCE_DIR}/src/TypeIIRML/*.cpp )
+
+add_library(Reflexxes SHARED ${RML_SRC})
+set_target_properties( Reflexxes PROPERTIES
+  VERSION "${RML_VERSION}"
+  SOVERSION "${RML_VERSION_MAJOR}"
+  OUTPUT_NAME ReflexxesTypeII
+# Set accumulated compilation flags: (.so and .a)
+  LINK_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}"
+  CLEAN_DIRECT_OUTPUT 1)
+
+add_library(Reflexxes_static STATIC ${RML_SRC})
+set_target_properties(Reflexxes_static PROPERTIES
+   OUTPUT_NAME ReflexxesTypeII CLEAN_DIRECT_OUTPUT 1)
+
+
+add_executable(01_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/01_RMLPositionSampleApplication.cpp)
+target_link_libraries(01_RMLPositionSampleApplications Reflexxes)
+
+add_executable(02_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/02_RMLPositionSampleApplication.cpp)
+target_link_libraries(02_RMLPositionSampleApplications Reflexxes)
+
+add_executable(03_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/03_RMLPositionSampleApplication.cpp)
+target_link_libraries(03_RMLPositionSampleApplications Reflexxes)
+
+add_executable(07_RMLPositionSampleApplications 
+	src/RMLPositionSampleApplications/07_RMLPositionSampleApplication.cpp)
+target_link_libraries(07_RMLPositionSampleApplications Reflexxes)
+
+add_executable(04_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(04_RMLVelocitySampleApplication Reflexxes)
+
+add_executable(05_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(05_RMLVelocitySampleApplication Reflexxes)
+
+add_executable(06_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(06_RMLVelocitySampleApplication Reflexxes)
+
+add_executable(08_RMLVelocitySampleApplication 
+	src/RMLVelocitySampleApplications/04_RMLVelocitySampleApplication.cpp)
+target_link_libraries(08_RMLVelocitySampleApplication Reflexxes)
+
+install(TARGETS Reflexxes Reflexxes_static EXPORT RMLExports
+    LIBRARY DESTINATION lib
+    ARCHIVE DESTINATION lib
+    RUNTIME DESTINATION bin
+    INCLUDES DESTINATION include/RML)
+
+set(PKG_NAME "reflexxes")      
+set(PKG_DESC "The Type II Reflexxes Motion Libraries")
+set(PKG_REFLEXXES_LIBS "-lReflexxesTypeII")
+set(pkg_conf_file "reflexxes.pc")
+
+configure_file("${pkg_conf_file}.in" "${pkg_conf_file}" @ONLY)   
+install(FILES "${PROJECT_BINARY_DIR}/${pkg_conf_file}"
+    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig/
+    RENAME "reflexxes.pc")
+
+configure_package_config_file(
+  "${CMAKE_CURRENT_SOURCE_DIR}/reflexxesConfig.cmake.in"
+  "${CMAKE_CURRENT_BINARY_DIR}/reflexxesConfig.cmake"
+  INSTALL_DESTINATION  ${RML_DIRNAME_lib}/cmake/reflexxes
+  PATH_VARS 
+   RML_DIRNAME_lib
+   RML_DIRNAME_include)
+
+write_basic_package_version_file(
+  "${CMAKE_CURRENT_BINARY_DIR}/reflexxesConfigVersion.cmake"
+  VERSION ${RML_VERSION}
+  COMPATIBILITY AnyNewerVersion)
+
+install(FILES ${RML_INCLUDES} DESTINATION include/RML)
+
+install(TARGETS 01_RMLPositionSampleApplications 02_RMLPositionSampleApplications
+      03_RMLPositionSampleApplications 04_RMLVelocitySampleApplication 
+      05_RMLVelocitySampleApplication 06_RMLVelocitySampleApplication 
+      07_RMLPositionSampleApplications 08_RMLVelocitySampleApplication
+      RUNTIME DESTINATION bin)
+
+install( EXPORT RMLExports
+	  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/reflexxes)
+   
+install( FILES ${CMAKE_CURRENT_BINARY_DIR}/reflexxesConfig.cmake
+    	${CMAKE_CURRENT_BINARY_DIR}/reflexxesConfigVersion.cmake
+  	DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/reflexxes)
+ 
